library(fitdistrplus)
df_corr= Ert_q %>%
select(latitude, longitude, depth, mag, nst, gap, dmin, rms, horizontalError, depthError, magError, magNst)
df_corr= Ert_q %>%
select(latitude, longitude, depth, mag, nst, gap, dmin, rms, horizontalError, depthError, magError, magNst)
df_corr= Ert_q %>%
select(Ert_q,latitude, longitude, depth, mag, nst, gap, dmin, rms, horizontalError, depthError, magError, magNst)
df_corr= select(Ert_q,latitude, longitude, depth, mag, nst, gap, dmin, rms, horizontalError, depthError, magError, magNst)
df_corr= select(Ert_q,latitude, longitude, depth, mag, nst, gap, dmin, rms, horizontalError, depthError, magError, magNst)
df_corr= Ert_q%>%
dplyr::select(Ert_q,latitude, longitude, depth, mag, nst, gap, dmin, rms, horizontalError, depthError, magError, magNst)
df_corr= Ert_q%>%
dplyr::select(latitude, longitude, depth, mag, nst, gap, dmin, rms, horizontalError, depthError, magError, magNst)
Summary(df_corr)
summary(df_corr)
which(is.na(df_corr))
which(is.na(df_corr$latitude))
Ert_q %>%
summarise(across(c(latitude, longitude, depth, mag, nst, gap, dmin, rms, horizontalError, depthError, magError, magNst),
~sum(is.na(.))))
df_corr %>%
drop.na()
df_corr %>%
drop_na
df_corr %>%
drop_na
df_corr %>%
drop_na()
na.omit(df_corr)
Ert_q %>%
summarise(across(c(latitude, longitude, depth, mag, nst, gap, dmin, rms, horizontalError, depthError, magError, magNst),
~sum(is.na(.)))) %>%
na.omit(df_corr)
Ert_q %>%
summarise(across(c(latitude, longitude, depth, mag, nst, gap, dmin, rms, horizontalError, depthError, magError, magNst),
~sum(is.na(.)))) %>%
na.omit(df_corr)
Ert_q %>%
summarise(across(c(latitude, longitude, depth, mag, nst, gap, dmin, rms, horizontalError, depthError, magError, magNst),
~sum(is.na(.)))) %>%
na.omit(df_corr)
df_corr= Ert_q%>%
dplyr::select(latitude, longitude, depth, mag, nst, gap, dmin, rms, horizontalError, depthError, magError, magNst)
Ert_q %>%
summarise(across(c(latitude, longitude, depth, mag, nst, gap, dmin, rms, horizontalError, depthError, magError, magNst),
~sum(is.na(.))))
na.omit(df_corr)
df_corr %>%
summarise(across(c(latitude, longitude, depth, mag, nst, gap, dmin, rms, horizontalError, depthError, magError, magNst),
~sum(is.na(.))))
na.omit(df_corr)
df_na=df_corr %>%
summarise(across(c(latitude, longitude, depth, mag, nst, gap, dmin, rms, horizontalError, depthError, magError, magNst),
~sum(is.na(.)))) %>%
na.omit(df_corr)
df_na
df_corr_clean <- df_corr %>%
drop_na(latitude, longitude, depth, mag, nst, gap, dmin, rms, horizontalError, depthError, magError, magNst)
library(tidyr)
df_corr_clean <- df_corr %>%
drop_na(latitude, longitude, depth, mag, nst, gap, dmin, rms, horizontalError, depthError, magError, magNst)
str(df_corr)
str(df_corr_clean)
str(df_corr_clean)
library(ggcorrplot)
cor(df_corr_clean)
str(cor(df_corr_clean))
ggcorrplot(cor_matrix, method = "color", lab = TRUE, outline.color = "white") +
ggtitle("Heatmap della Correlazione tra Variabili dei Terremoti") +
theme_minimal()
library(corrplot)
library(corrplot)
library(ggcorrplot)
df_f=cor(df_corr_clean)
ggcorrplot(df_f, method = "color", lab = TRUE, outline.color = "white") +
ggtitle("Heatmap della Correlazione tra Variabili dei Terremoti") +
theme_minimal()
df_f=cor(df_corr_clean, use = "complete.obs")
ggcorrplot(df_f, method = "square", lab = TRUE, outline.color = "white") +
ggtitle("Heatmap della Correlazione tra Variabili dei Terremoti") +
theme_minimal()
?ggcorrplot
ggcorrplot(df_f, method = "cirle", lab = TRUE, outline.color = "white") +
ggtitle("Heatmap della Correlazione tra Variabili dei Terremoti") +
theme_minimal()
ggcorrplot(df_f, method = "circle", lab = TRUE, outline.color = "white") +
ggtitle("Heatmap della Correlazione tra Variabili dei Terremoti") +
theme_minimal()
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(df_f,
method = "circle",   # Usa cerchi per rendere più chiaro il grafico
type = "full",       # Mostra tutta la matrice, non solo metà
lab = TRUE,          # Mostra i valori di correlazione
lab_size = 3,        # Riduce la dimensione delle etichette per evitare sovrapposizioni
tl.cex = 10,         # Regola la dimensione del testo delle variabili
tl.srt = 45,         # Ruota le etichette dell'asse X per migliorare la leggibilità
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(df_f,
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "lower",      # Mostra solo metà inferiore della matrice
lab = TRUE,          # Mostra i valori numerici della correlazione
lab_size = 3,        # Riduce la dimensione dei numeri per evitare sovrapposizioni
tl.cex = 10,         # Regola la dimensione delle etichette delle variabili
tl.srt = 45,         # Ruota le etichette dell'asse X
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(df_f,
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "full",      # Mostra solo metà inferiore della matrice
lab = TRUE,          # Mostra i valori numerici della correlazione
lab_size = 2,        # Riduce la dimensione dei numeri per evitare sovrapposizioni
tl.cex = 5,         # Regola la dimensione delle etichette delle variabili
tl.srt = 45,         # Ruota le etichette dell'asse X
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(df_f,
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "full",      # Mostra solo metà inferiore della matrice
lab = TRUE,          # Mostra i valori numerici della correlazione
lab_size = 2,        # Riduce la dimensione dei numeri per evitare sovrapposizioni
tl.cex = 2,         # Regola la dimensione delle etichette delle variabili
tl.srt = 45,         # Ruota le etichette dell'asse X
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(df_f,
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "full",      # Mostra solo metà inferiore della matrice
lab = TRUE,          # Mostra i valori numerici della correlazione
lab_size = 2,        # Riduce la dimensione dei numeri per evitare sovrapposizioni
tl.cex = 2,         # Regola la dimensione delle etichette delle variabili
tl.srt = 35,         # Ruota le etichette dell'asse X
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(df_f,
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "full",      # Mostra solo metà inferiore della matrice
lab = TRUE,          # Mostra i valori numerici della correlazione
lab_size = 2,        # Riduce la dimensione dei numeri per evitare sovrapposizioni
tl.cex = 2,         # Regola la dimensione delle etichette delle variabili
tl.srt = 90,         # Ruota le etichette dell'asse X
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(df_f,
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "full",      # Mostra solo metà inferiore della matrice
lab = TRUE,          # Mostra i valori numerici della correlazione
lab_size = 2,        # Riduce la dimensione dei numeri per evitare sovrapposizioni
tl.cex = 2,         # Regola la dimensione delle etichette delle variabili
tl.srt = -90,         # Ruota le etichette dell'asse X
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(df_f,
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "full",      # Mostra solo metà inferiore della matrice
lab = TRUE,          # Mostra i valori numerici della correlazione
lab_size = 2,        # Riduce la dimensione dei numeri per evitare sovrapposizioni
tl.cex = 2,         # Regola la dimensione delle etichette delle variabili
tl.srt = 20,         # Ruota le etichette dell'asse X
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(df_f,
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "full",      # Mostra solo metà inferiore della matrice
lab = TRUE,          # Mostra i valori numerici della correlazione
lab_size = 1,        # Riduce la dimensione dei numeri per evitare sovrapposizioni
tl.cex = 2,         # Regola la dimensione delle etichette delle variabili
tl.srt = 20,         # Ruota le etichette dell'asse X
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
dim(df_f)
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(df_f,
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "full",      # Mostra solo metà inferiore della matrice
lab = TRUE,          # Mostra i valori numerici della correlazione
lab_size = 3,        # Riduce la dimensione dei numeri per evitare sovrapposizioni
tl.cex = 2,         # Regola la dimensione delle etichette delle variabili
tl.srt = 20,         # Ruota le etichette dell'asse X
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
library(reshape2)
library(reshape2)
melt(df_f)
melted_cor=melt(df_f)
class(melted_cor)
str(melted_cor)
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(melted_cor,
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "full",      # Mostra solo metà inferiore della matrice
lab = TRUE,          # Mostra i valori numerici della correlazione
lab_size = 3,        # Riduce la dimensione dei numeri per evitare sovrapposizioni
tl.cex = 2,         # Regola la dimensione delle etichette delle variabili
tl.srt = 20,        # Ruota le etichette dell'asse X
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
data(SaratogaHouses, package="mosaicData")
# select numeric variables
df <- dplyr::select_if(SaratogaHouses, is.numeric)
# calulate the correlations
r <- cor(df, use="complete.obs")
round(r,2)
ggcorrplot(r)
ggcorrplot(r,
hc.order = TRUE,
type = "lower",
lab = TRUE)
data(SaratogaHouses, package="mosaicData")
houses_lm <- lm(price ~ lotSize + age + landValue +
livingArea + bedrooms + bathrooms +
waterfront,
data = SaratogaHouses)
# conditional plot of price vs. living area
library(ggplot2)
library(visreg)
visreg(houses_lm, "livingArea", gg = TRUE)
# conditional plot of price vs. waterfront location
visreg(houses_lm, "waterfront", gg = TRUE) +
scale_y_continuous(label = scales::dollar) +
labs(title = "Relationship between price and location",
subtitle = "controlling for lot size, age, land value, bedrooms and bathrooms",
caption = "source: Saratoga Housing Data (2006)",
y = "Home Price",
x = "Waterfront")
# fit logistic model for predicting
# marital status: married/single
data(CPS85, package = "mosaicData")
cps85_glm <- glm(married ~ sex + age + race + sector,
family="binomial",
data=CPS85)
# plot results
library(ggplot2)
library(visreg)
visreg(cps85_glm, "age",
gg = TRUE,
scale="response") +
labs(y = "Prob(Married)",
x = "Age",
title = "Relationship of age and marital status",
subtitle = "controlling for sex, race, and job sector",
caption = "source: Current Population Survey 1985")
# plot results
library(ggplot2)
library(visreg)
visreg(cps85_glm, "age",
by = "sex",
gg = TRUE,
scale="response") +
labs(y = "Prob(Married)",
x = "Age",
title = "Relationship of age and marital status",
subtitle = "controlling for race and job sector",
caption = "source: Current Population Survey 1985")
# plot survival curve
library(survival)
library(survminer)
data(lung)
sfit <- survfit(Surv(time, status) ~  1, data=lung)
ggsurvplot(sfit,
title="Kaplan-Meier curve for lung cancer survival")
# plot survival curve for men and women
sfit <- survfit(Surv(time, status) ~  sex, data=lung)
ggsurvplot(sfit,
conf.int=TRUE,
pval=TRUE,
legend.labs=c("Male", "Female"),
legend.title="Sex",
palette=c("cornflowerblue", "indianred3"),
title="Kaplan-Meier Curve for lung cancer survival",
xlab = "Time (days)")
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(melted_cor,
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "full",      # Mostra solo metà inferiore della matrice
lab = TRUE,          # Mostra i valori numerici della correlazione
lab_size = 3,        # Riduce la dimensione dei numeri per evitare sovrapposizioni
tl.cex = 2,         # Regola la dimensione delle etichette delle variabili
tl.srt = 20,        # Ruota le etichette dell'asse X
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(as.numeric(melted_cor),
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "full",      # Mostra solo metà inferiore della matrice
lab = TRUE,          # Mostra i valori numerici della correlazione
lab_size = 3,        # Riduce la dimensione dei numeri per evitare sovrapposizioni
tl.cex = 2,         # Regola la dimensione delle etichette delle variabili
tl.srt = 20,        # Ruota le etichette dell'asse X
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(as.data.frame(melted_cor),
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "full",      # Mostra solo metà inferiore della matrice
lab = TRUE,          # Mostra i valori numerici della correlazione
lab_size = 3,        # Riduce la dimensione dei numeri per evitare sovrapposizioni
tl.cex = 2,         # Regola la dimensione delle etichette delle variabili
tl.srt = 20,        # Ruota le etichette dell'asse X
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(df_f,
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "full",      # Mostra solo metà inferiore della matrice
lab = TRUE,          # Mostra i valori numerici della correlazione
lab_size = 3,        # Riduce la dimensione dei numeri per evitare sovrapposizioni
tl.cex = 2,         # Regola la dimensione delle etichette delle variabili
tl.srt = 20,        # Ruota le etichette dell'asse X
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(df_f,
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "full",
hc.order=TRUE# Mostra solo metà inferiore della matrice
lab = TRUE,          # Mostra i valori numerici della correlazione
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(df_f,
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "full", # Mostra solo metà inferiore della matrice
hc.order=TRUE
lab = TRUE,          # Mostra i valori numerici della correlazione
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(df_f,
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "full", # Mostra solo metà inferiore della matrice
hc.order=TRUE,
lab = TRUE,          # Mostra i valori numerici della correlazione
lab_size = 3,        # Riduce la dimensione dei numeri per evitare sovrapposizioni
tl.cex = 2,         # Regola la dimensione delle etichette delle variabili
tl.srt = 20,        # Ruota le etichette dell'asse X
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(df_f,
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "full", # Mostra solo metà inferiore della matrice
hc.order=TRUE,
lab = TRUE,          # Mostra i valori numerici della correlazione
lab_size = 3,        # Riduce la dimensione dei numeri per evitare sovrapposizioni
tl.cex = 12,         # Regola la dimensione delle etichette delle variabili
tl.srt = 20,        # Ruota le etichette dell'asse X
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(df_f,
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "full", # Mostra solo metà inferiore della matrice
hc.order=TRUE,
lab = TRUE,          # Mostra i valori numerici della correlazione
lab_size = 3,        # Riduce la dimensione dei numeri per evitare sovrapposizioni
tl.cex = 0.8,         # Regola la dimensione delle etichette delle variabili
tl.srt = 20,        # Ruota le etichette dell'asse X
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(df_f,
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "full", # Mostra solo metà inferiore della matrice
hc.order=TRUE,
lab = TRUE,          # Mostra i valori numerici della correlazione
lab_size = 3,        # Riduce la dimensione dei numeri per evitare sovrapposizioni
tl.cex = 0.1,         # Regola la dimensione delle etichette delle variabili
tl.srt = 20,        # Ruota le etichette dell'asse X
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(df_f,
method = "circle",   # Usa cerchi colorati per evidenziare le correlazioni
type = "full", # Mostra solo metà inferiore della matrice
hc.order=TRUE,
lab = TRUE,          # Mostra i valori numerici della correlazione
lab_size = 3,        # Riduce la dimensione dei numeri per evitare sovrapposizioni
tl.cex = 0.1,         # Regola la dimensione delle etichette delle variabili
tl.srt = 45,        # Ruota le etichette dell'asse X
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
# Plotta la matrice di correlazione con miglioramenti
ggcorrplot(df_f,
show.diag=TRUE,
method = "circle", # Usa cerchi colorati per evidenziare le correlazioni
type = "full", # Mostra solo metà inferiore della matrice
hc.order=TRUE,
lab = TRUE,          # Mostra i valori numerici della correlazione
lab_size = 3,        # Riduce la dimensione dei numeri per evitare sovrapposizioni
tl.cex = 0.1,         # Regola la dimensione delle etichette delle variabili
tl.srt = 45,        # Ruota le etichette dell'asse X
outline.color = "white") +
ggtitle("Matrice di Correlazione") +
theme_minimal()
?cor
corrplot(df_f,
method = "color",    # Usa colori per distinguere meglio i livelli di correlazione
type = "lower",      # Mostra solo la parte inferiore della matrice
tl.cex = 0.8,        # Riduce la dimensione delle etichette per evitare sovrapposizioni
tl.srt = 45,         # Ruota le etichette per migliorarne la leggibilità
addCoef.col = "black",  # Mostra i valori della correlazione in nero
number.cex = 0.7)    # Riduce la grandezza dei numeri dentro la matrice
corrplot(df_f,
method = "color",    # Usa colori per distinguere meglio i livelli di correlazione
type = "totalr",      # Mostra solo la parte inferiore della matrice
tl.cex = 0.8,        # Riduce la dimensione delle etichette per evitare sovrapposizioni
tl.srt = 45,         # Ruota le etichette per migliorarne la leggibilità
addCoef.col = "black",  # Mostra i valori della correlazione in nero
number.cex = 0.7)    # Riduce la grandezza dei numeri dentro la matrice
corrplot(df_f,
method = "color",    # Usa colori per distinguere meglio i livelli di correlazione
type = "full",      # Mostra solo la parte inferiore della matrice
tl.cex = 0.8,        # Riduce la dimensione delle etichette per evitare sovrapposizioni
tl.srt = 45,         # Ruota le etichette per migliorarne la leggibilità
addCoef.col = "black",  # Mostra i valori della correlazione in nero
number.cex = 0.7)    # Riduce la grandezza dei numeri dentro la matrice
corrplot(df_f,
method = "color",    # Usa colori per distinguere meglio i livelli di correlazione
type = "full",      # Mostra solo la parte inferiore della matrice
tl.cex = 0.8,        # Riduce la dimensione delle etichette per evitare sovrapposizioni
tl.srt = 45,         # Ruota le etichette per migliorarne la leggibilità
addCoef.col = "white",  # Mostra i valori della correlazione in nero
number.cex = 0.7)    # Riduce la grandezza dei numeri dentro la matrice
corrplot(df_f,
method = "color",    # Usa colori per distinguere meglio i livelli di correlazione
type = "full",      # Mostra solo la parte inferiore della matrice
tl.cex = 0.8,        # Riduce la dimensione delle etichette per evitare sovrapposizioni
tl.srt = 45,         # Ruota le etichette per migliorarne la leggibilità
addCoef.col = "black",  # Mostra i valori della correlazione in nero
number.cex = 0.7)    # Riduce la grandezza dei numeri dentro la matrice
# nUMERO DI TERREMOTI SU FREQUENZA ANNUALE
library(lubridate)
gg=Ert_q %>%
mutate(Anno=year(as.Date(DataOra))%>%,
gg=Ert_q %>%
mutate(Anno=year(as.Date(DataOra))%>%
Anno=as.Date(time))
gg=Ert_q %>%
mutate(Anno=year(as.Date(DataOra))%>%
Anno=as.Date(time))
gg=   Ert_q %>%
gg
gg=   Ert_q %>%
mutate(Anno=year(as.Date(DataOra)))%>%
group_by(Anno)
gg=   Ert_q %>%
mutate(Anno=year(as.Date(time)))%>%
group_by(Anno)
gg
ggplot(gg, aes(x = Anno, y = Conteggio)) +
geom_line(color = "blue") +
labs(title = "Serie Temporale dei Terremoti (Raggruppati per Anno)", x = "Anno", y = "Numero di Terremoti")
gg=   Ert_q %>%
mutate(Anno=year(as.Date(time)))%>%
group_by(Anno) %>%
summarise(Conteggio= n(), magnitudomedia=mean(mag))
ggplot(gg, aes(x = Anno, y = Conteggio)) +
geom_line(color = "blue") +
labs(title = "Serie Temporale dei Terremoti (Raggruppati per Anno)", x = "Anno", y = "Numero di Terremoti")
setwd("C:\Users\Roberto\Desktop\Progetto in R. L-D-R")
setwd("C:/Users/Roberto/Desktop/Progetto in R. L-D-R")
terremoti <- read.csv("Earthquake_1970-2025.csv")
library(pander)
install.packages(pander)
install.packages("pander")
library(pander)
pander(head(terremoti))
library(pander)
pander(head(terremoti %>% select(latitude, longitude, depth, mag, nst, type, time)))
library(readr)
library(sf)
library(ggplot2)
library(dplyr)
library(maps)
library(tidyr)
library(RColorBrewer)
library(stringr)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggrepel)
library(lubridate)
library(pander)
pander(head(terremoti %>% select(latitude, longitude, depth, mag, nst, type, time)))
pander(summary(terremoti %>% select(latitude, longitude, depth, mag, nst, type, time)))
pander(summary(terremoti %>% select(latitude, longitude, depth, mag, nst)))
pander(summary(terremoti %>% select(latitude, longitude)))
pander(summary(terremoti %>% select(depth, mag, nst)))
