library(dplyr)
library(ggplot2)
library(lubridate)
df_year <- terremoti %>%
# Converte la colonna time in data-ora e crea la variabile month
mutate(time = ymd_hms(time, tz = "UTC"),
month = floor_date(time, unit = "year"),
# Crea gli intervalli di magnitudo a step di 0.5
mag_bin = cut(mag,
breaks = seq(floor(min(mag, na.rm = TRUE)),
ceiling(max(mag, na.rm = TRUE)),
by = 0.5),
include.lowest = TRUE,
right = FALSE)) %>%
# Raggruppa per mese e per intervallo di magnitudo e conta gli eventi
group_by(month, mag_bin) %>%
summarise(count = n(), .groups = "drop")
# Creazione del grafico ad area
ggplot(df_year, aes(x = year, y = log(count), fill = mag_bin)) +
geom_area(color = "black", size = 0.2) +
labs(title = "Terremoti per Intervallo di Magnitudo nel Tempo",
subtitle = "Aggregazione mensile con step di 0.5 nella magnitudo",
x = "Anno",
y = "Numero di Terremoti",
fill = "Magnitudo (intervallo)") +
theme_minimal()
# Carica le librerie necessarie
library(dplyr)
library(ggplot2)
library(lubridate)
df_year <- terremoti %>%
# Converte la colonna time in data-ora e crea la variabile month
mutate(time = ymd_hms(time, tz = "UTC"),
month = floor_date(time, unit = "year"),
# Crea gli intervalli di magnitudo a step di 0.5
mag_bin = cut(mag,
breaks = seq(floor(min(mag, na.rm = TRUE)),
ceiling(max(mag, na.rm = TRUE)),
by = 0.5),
include.lowest = TRUE,
right = FALSE)) %>%
group_by(year, mag_bin) %>%
summarise(count = n(), .groups = "drop")
# Carica le librerie necessarie
library(dplyr)
library(ggplot2)
library(lubridate)
df_year <- terremoti %>%
# Converte la colonna time in data-ora e crea la variabile month
mutate(time = ymd_hms(time, tz = "UTC"),
year = floor_date(time, unit = "year"),
# Crea gli intervalli di magnitudo a step di 0.5
mag_bin = cut(mag,
breaks = seq(floor(min(mag, na.rm = TRUE)),
ceiling(max(mag, na.rm = TRUE)),
by = 0.5),
include.lowest = TRUE,
right = FALSE)) %>%
group_by(year, mag_bin) %>%
summarise(count = n(), .groups = "drop")
# Creazione del grafico ad area
ggplot(df_year, aes(x = year, y = log(count), fill = mag_bin)) +
geom_area(color = "black", size = 0.2) +
labs(title = "Terremoti per Intervallo di Magnitudo nel Tempo",
subtitle = "Aggregazione mensile con step di 0.5 nella magnitudo",
x = "Anno",
y = "Numero di Terremoti",
fill = "Magnitudo (intervallo)") +
theme_minimal()
# Carica le librerie necessarie
library(dplyr)
library(ggplot2)
library(lubridate)
df_year <- terremoti %>%
mutate(time = ymd_hms(time, tz = "UTC"),
year = floor_date(time, unit = "year"),
mag_bin = cut(mag,
breaks = seq(floor(min(mag, na.rm = TRUE)),
ceiling(max(mag, na.rm = TRUE)),
by = 0.5),
include.lowest = TRUE,
right = FALSE)) %>%
group_by(year, mag_bin) %>%
summarise(count = n(), .groups = "drop")
# Creazione del grafico ad area
ggplot(df_year, aes(x = year, y = count, fill = mag_bin)) +
geom_area(color = "black", size = 0.2) +
scale_y_log10() +
labs(title = "Terremoti per Intervallo di Magnitudo nel Tempo",
subtitle = "Aggregazione annuale con step di 0.5 nella magnitudo",
x = "Anno",
y = "Numero di Terremoti scala log",
fill = "Magnitudo (intervallo)") +
theme_minimal()
# Carica le librerie necessarie
library(dplyr)
library(ggplot2)
library(lubridate)
df_year <- terremoti %>%
mutate(time = ymd_hms(time, tz = "UTC"),
year = floor_date(time, unit = "year"),
mag_bin = cut(mag,
breaks = seq(floor(min(mag, na.rm = TRUE)),
ceiling(max(mag, na.rm = TRUE)),
by = 0.5),
include.lowest = TRUE,
right = FALSE)) %>%
group_by(year, mag_bin) %>%
summarise(count = n(), .groups = "drop")
# Creazione del grafico ad area
ggplot(df_year, aes(x = year, y = count, fill = mag_bin)) +
geom_area(color = "black", size = 0.2) +
scale_y_log10() +
labs(title = "Terremoti per Intervallo di Magnitudo nel Tempo",
subtitle = "Aggregazione annuale con step di 0.5 nella magnitudo",
x = "Anno",
y = "Numero di Terremoti scala log",
fill = "Magnitudo (intervallo)") +
theme_minimal()
# Carica le librerie necessarie
library(dplyr)
library(ggplot2)
library(lubridate)
df_year <- terremoti %>%
mutate(time = ymd_hms(time, tz = "UTC"),
year = floor_date(time, unit = "year"),
mag_bin = cut(mag,
breaks = seq(floor(min(mag, na.rm = TRUE)),
ceiling(max(mag, na.rm = TRUE)),
by = 0.5),
include.lowest = TRUE,
right = FALSE)) %>%
group_by(year, mag_bin) %>%
summarise(count = n(), .groups = "drop")
# Creazione del grafico ad area
ggplot(df_year, aes(x = year, y = count, fill = mag_bin)) +
geom_area(color = "black", size = 0.2) +
scale_y_log10() +
labs(title = "Terremoti per Intervallo di Magnitudo nel Tempo",
subtitle = "Aggregazione annuale con step di 0.5 nella magnitudo",
x = "Anno",
y = "Numero di Terremoti (scala log.)",
fill = "Magnitudo (intervallo)") +
theme_minimal()
# stacked area chart
library(gcookbook)
data(uspopage, package = "gcookbook")
ggplot(uspopage, aes(x = Year,
y = Thousands,
fill = AgeGroup)) +
geom_area() +
labs(title = "US Population by age",
x = "Year",
y = "Population in Thousands")
# stacked area chart
data(uspopage, package = "gcookbook")
ggplot(uspopage, aes(x = Year,
y = Thousands/1000,
fill = forcats::fct_rev(AgeGroup))) +
geom_area(color = "black") +
labs(title = "US Population by age",
subtitle = "1900 to 2002",
caption = "source: U.S. Census Bureau, 2003, HS-3",
x = "Year",
y = "Population in Millions",
fill = "Age Group") +
scale_fill_brewer(palette = "Set2") +
theme_minimal()
# Carica le librerie necessarie
library(dplyr)
library(ggplot2)
library(lubridate)
df_year <- terremoti %>%
mutate(time = ymd_hms(time, tz = "UTC"),
year = floor_date(time, unit = "year"),
mag_bin = cut(mag,
breaks = seq(floor(min(mag, na.rm = TRUE)),
ceiling(max(mag, na.rm = TRUE)),
by = 0.5),
include.lowest = TRUE,
right = FALSE)) %>%
group_by(year, mag_bin) %>%
summarise(count = n(), .groups = "drop")
# Creazione del grafico ad area
ggplot(df_year, aes(x = year, y = count, fill = mag_bin)) +
geom_area(color = "black", size = 0.2) +
scale_y_log10() +
labs(title = "Terremoti per Intervallo di Magnitudo nel Tempo",
subtitle = "Aggregazione annuale con step di 0.5 nella magnitudo",
x = "Anno",
y = "Numero di Terremoti (scala log.)",
fill = "Magnitudo (intervallo)") +
scale_fill_brewer(palette = "Set2") +
theme_minimal()
# Carica le librerie necessarie
library(dplyr)
library(ggplot2)
library(lubridate)
df_year <- terremoti %>%
mutate(time = ymd_hms(time, tz = "UTC"),
year = floor_date(time, unit = "year"),
mag_bin = cut(mag,
breaks = seq(floor(min(mag, na.rm = TRUE)),
ceiling(max(mag, na.rm = TRUE)),
by = 0.5),
include.lowest = TRUE,
right = FALSE)) %>%
group_by(year, mag_bin) %>%
summarise(count = n(), .groups = "drop")
# Creazione del grafico ad area
ggplot(df_year, aes(x = year, y = count, fill = mag_bin)) +
geom_area(color = "black", size = 0.2) +
scale_y_log10() +
labs(title = "Terremoti per Intervallo di Magnitudo nel Tempo",
subtitle = "Aggregazione annuale con step di 0.5 nella magnitudo",
x = "Anno",
y = "Numero di Terremoti (scala log.)",
fill = "Magnitudo (intervallo)") +
scale_fill_brewer(palette = "Set2") +
theme_minimal()
# Carica le librerie necessarie
library(dplyr)
library(ggplot2)
library(lubridate)
df_year <- terremoti %>%
mutate(time = ymd_hms(time, tz = "UTC"),
year = floor_date(time, unit = "year"),
mag_bin = cut(mag,
breaks = seq(floor(min(mag, na.rm = TRUE)),
ceiling(max(mag, na.rm = TRUE)),
by = 0.5),
include.lowest = TRUE,
right = FALSE)) %>%
group_by(year, mag_bin) %>%
summarise(count = n(), .groups = "drop")
# Creazione del grafico ad area
ggplot(df_year, aes(x = year, y = count, fill = mag_bin)) +
geom_area(color = "black", size = 0.2) +
scale_y_log10() +
labs(title = "Terremoti per Intervallo di Magnitudo nel Tempo",
subtitle = "Aggregazione annuale con step di 0.5 nella magnitudo",
x = "Anno",
y = "Numero di Terremoti (scala log.)",
fill = "Magnitudo (intervallo)") +
scale_fill_brewer(palette = "Set1") +
theme_minimal()
# Carica le librerie necessarie
library(dplyr)
library(ggplot2)
library(lubridate)
df_year <- terremoti %>%
mutate(time = ymd_hms(time, tz = "UTC"),
year = floor_date(time, unit = "year"),
mag_bin = cut(mag,
breaks = seq(floor(min(mag, na.rm = TRUE)),
ceiling(max(mag, na.rm = TRUE)),
by = 0.5),
include.lowest = TRUE,
right = FALSE)) %>%
group_by(year, mag_bin) %>%
summarise(count = n(), .groups = "drop")
# Creazione del grafico ad area
ggplot(df_year, aes(x = year, y = count, fill = mag_bin)) +
geom_area(color = "black", size = 0.2) +
scale_y_log10() +
labs(title = "Terremoti per Intervallo di Magnitudo nel Tempo",
subtitle = "Aggregazione annuale con step di 0.5 nella magnitudo",
x = "Anno",
y = "Numero di Terremoti (scala log.)",
fill = "Magnitudo (intervallo)") +
scale_fill_brewer(palette = "Set3") +
theme_minimal()
# Carica le librerie necessarie
library(dplyr)
library(ggplot2)
library(lubridate)
df_year <- terremoti %>%
mutate(time = ymd_hms(time, tz = "UTC"),
year = floor_date(time, unit = "year"),
mag_bin = cut(mag,
breaks = seq(floor(min(mag, na.rm = TRUE)),
ceiling(max(mag, na.rm = TRUE)),
by = 0.5),
include.lowest = TRUE,
right = FALSE)) %>%
group_by(year, mag_bin) %>%
summarise(count = n(), .groups = "drop")
# Creazione del grafico ad area
ggplot(df_year, aes(x = year, y = count, fill = mag_bin)) +
geom_area(color = "black", size = 0.2) +
scale_y_log10() +
labs(title = "Terremoti per Intervallo di Magnitudo nel Tempo",
subtitle = "Aggregazione annuale con step di 0.5 nella magnitudo",
x = "Anno",
y = "Numero di Terremoti (scala log.)",
fill = "Magnitudo (intervallo)") +
scale_fill_brewer(palette = "Set4") +
theme_minimal()
# Carica le librerie necessarie
library(dplyr)
library(ggplot2)
library(lubridate)
df_year <- terremoti %>%
mutate(time = ymd_hms(time, tz = "UTC"),
year = floor_date(time, unit = "year"),
mag_bin = cut(mag,
breaks = seq(floor(min(mag, na.rm = TRUE)),
ceiling(max(mag, na.rm = TRUE)),
by = 0.5),
include.lowest = TRUE,
right = FALSE)) %>%
group_by(year, mag_bin) %>%
summarise(count = n(), .groups = "drop")
# Creazione del grafico ad area
ggplot(df_year, aes(x = year, y = count, fill = mag_bin)) +
geom_area(color = "black", size = 0.2) +
scale_y_log10() +
labs(title = "Terremoti per Intervallo di Magnitudo nel Tempo",
subtitle = "Aggregazione annuale con step di 0.5 nella magnitudo",
x = "Anno",
y = "Numero di Terremoti (scala log.)",
fill = "Magnitudo (intervallo)") +
theme_minimal()
library(readr)
library(sf)
library(ggplot2)
library(dplyr)
library(maps)
library(tidyr)
library(RColorBrewer)
library(stringr)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggrepel)
library(lubridate)
library(gridExtra)
library(tidyr)
library(corrplot)
library(ggcorrplot)
library(GGally)
terremoti <- read.csv("Earthquake_1970-2025.csv")
# Carica le librerie necessarie
df_year <- terremoti %>%
mutate(time = ymd_hms(time, tz = "UTC"),
year = floor_date(time, unit = "year"),
mag_bin = cut(mag,
breaks = seq(floor(min(mag, na.rm = TRUE)),
ceiling(max(mag, na.rm = TRUE)),
by = 0.5),
include.lowest = TRUE,
right = FALSE)) %>%
group_by(year, mag_bin) %>%
summarise(count = n(), .groups = "drop")
# Creazione del grafico ad area
ggplot(df_year, aes(x = year, y = count, fill = mag_bin)) +
geom_area(color = "black", size = 0.2) +
scale_y_log10() +
labs(title = "Terremoti per Intervallo di Magnitudo nel Tempo",
subtitle = "Aggregazione annuale con step di 0.5 nella magnitudo",
x = "Anno",
y = "Numero di Terremoti (scala log.)",
fill = "Magnitudo (intervallo)") +
theme_minimal()
str(terremoti)
str(terremoti, width = 60)
str(terremoti, width = 20)
str(terremoti, width = 5)
View(mtcars)
#str(terremoti, width = 5)
glimpse(terremoti)
world <- ne_countries(scale = "medium", returnclass = "sf")
asia <- world %>% filter(continent == "Asia")
# Converte i dati dei punti in un oggetto sf
merged_data_sf <- st_as_sf(merged_data_clean, coords = c("longitude", "latitude"), crs = st_crs(asia))
usa_state = c("Alabama", "Alaska", "Arizona", "Arkansas",
"California", "Colorado", "Connecticut",
"Delaware", "Florida", "Georgia", "Hawaii",
"Idaho", "Illinois", "Indiana", "Iowa",
"Kansas", "Kentucky", "Louisiana", "Maine",
"Maryland", "Massachusetts", "Michigan",
"Minnesota", "Mississippi", "Missouri", "Montana",
"Nebraska", "Nevada", "New Hampshire",
"New Jersey", "New Mexico", "New York", "North Carolina",
"North Dakota", "Ohio", "Oklahoma",
"Oregon", "Pennsylvania", "Rhode Island", "South Carolina",
"South Dakota", "Tennessee", "Texas", "Utah", "Vermont",
"Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming")
usa_state = tolower(usa_state)
# Ho filtrato anche le parole: region, earthquake, sequence, california-baja
earthquakes <- terremoti %>%
filter(type == "earthquake") %>%
separate(place, into = c("location", "state"), sep = ",", extra = "drop") %>%
mutate(state = trimws(state)) %>%
filter(!is.na(state)) %>%
mutate(state = tolower(state)) %>%
mutate(state = str_replace_all(state,
"region|earthquake|sequence|california-baja",
"")) %>%
mutate(state = str_trim(state)) %>%
mutate(state = case_when(
state %in% usa_state ~ "usa",
TRUE ~ state  # mantiene il valore originale per le altre nazioni
))%>%
count(state) %>%
mutate(Percentuale = n / sum(n) * 100) %>%
arrange(-n)
state_map <- map_data("state")
world_map <- map_data("world")
centroids_state <- state_map %>%
group_by(region) %>%
mutate(region = tolower(region)) %>%
summarise(
latitude = mean(lat),
longitude = mean(long)
)
centroids_world <- world_map %>%
group_by(region) %>%
mutate(region = tolower(region)) %>%
summarise(
latitude = mean(lat),
longitude = mean(long)
)
# Ora uniamo i due dataset
merged_data <- merge(earthquakes, centroids_world, by.x = "state",
by.y = "region", all.x = TRUE)
# Rimuovi i valori NA nelle coordinate
merged_data_clean <- merged_data %>%
filter(!is.na(longitude) & !is.na(latitude)) %>%
arrange(-n)
# ----- Vediamo quali sono gli stati con più terremoti ----
limite = 5
# Funzione per filtrare gli stati a più alta percentuale
filtra_percentuale <- function(dataset, soglia = 3) {
dataset %>%
filter(Percentuale >= soglia)
}
stati_importanti <- filtra_percentuale(merged_data_clean, limite)
ggplot(stati_importanti, aes(x="", y=Percentuale, fill=state)) +
geom_bar(stat="identity", width=1, color="black") +
geom_text(aes(label = paste(str_trunc(str_to_title(state), width = 14,
ellipsis = "..."), "\n",
round(Percentuale, 1), "%")),
position = position_stack(vjust = 0.6), size = 3.8,
color = "black") +
coord_polar("y", start=0, direction=-1) +
theme_void() +
scale_fill_brewer(palette="Set2") +
labs(title="PIE CHART degli Stati",
fill="Stati")
world <- ne_countries(scale = "medium", returnclass = "sf")
asia <- world %>% filter(continent == "Asia")
# Converte i dati dei punti in un oggetto sf
merged_data_sf <- st_as_sf(merged_data_clean, coords = c("longitude", "latitude"), crs = st_crs(asia))
# Filtro i punti che sono dentro il continente africano
merged_data_filtered <- st_intersection(merged_data_sf, asia)
# Estraggog le coordinate dalla geometria
merged_data_filtered <- merged_data_filtered %>%
mutate(longitude = st_coordinates(geometry)[, 1],
latitude = st_coordinates(geometry)[, 2])
st_crs(faglie) <- 4326  # Imposta il CRS di 'faglie'
faglie <- st_read("gem_active_faults.shp")
ggplot() +
# Aggiungi la mappa del mondo
borders("world", colour = "gray50", fill = "lightgray") +
# Aggiungi le faglie
geom_sf(data = faglie, color = "red", size = 1, alpha = 0.7) +
labs(title = "Faglie Geologiche Attive", x = "Longitudine", y = "Latitudine",
color = "Magnitudo") +
theme_minimal(base_size = 14) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 18, face = "bold"),
legend.position="right")
world <- ne_countries(scale = "medium", returnclass = "sf")
asia <- world %>% filter(continent == "Asia")
# Converte i dati dei punti in un oggetto sf
merged_data_sf <- st_as_sf(merged_data_clean, coords = c("longitude", "latitude"), crs = st_crs(asia))
# Filtro i punti che sono dentro il continente africano
merged_data_filtered <- st_intersection(merged_data_sf, asia)
# Estraggog le coordinate dalla geometria
merged_data_filtered <- merged_data_filtered %>%
mutate(longitude = st_coordinates(geometry)[, 1],
latitude = st_coordinates(geometry)[, 2])
st_crs(faglie) <- 4326  # Imposta il CRS di 'faglie'
st_crs(asia) <- 4326    # Imposta il CRS di 'asia'
faglie_in_asia <- st_intersection(faglie, asia)
asia_merged <- st_join(asia, merged_data_sf %>% select(state, Percentuale))
ggplot(data = asia_merged) +
geom_sf(aes(fill = Percentuale), color = "gray") +
scale_fill_gradient(low = "yellow", high = "red", na.value = "gray90",
name = "Percentuale") +
geom_point(data = merged_data_filtered, aes(x = longitude,
y = latitude), alpha = 0.6) +
geom_sf(data = faglie_in_asia, color = "violet", size = 1, alpha = 0.3) +
geom_text_repel(data = merged_data_filtered,
aes(x = longitude, y = latitude, label = str_to_title(state)),
size = 2.5, fontface = "bold") +
labs(title = "Asia e faglie geologiche", x = "Longitudine",
y = "Latitudine", fill = "Percentuale",
caption = 'In grigio sono indicati gli stati su cui non abbiamo dati.') +
guides(fill = guide_colorbar(title = "Percentuale",
title.position = "top",
barwidth = 0.8, barheight = 15)) +
theme_minimal(base_size = 16) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
legend.position = "right",
legend.title = element_text(size = 14, face = "bold"),
legend.text = element_text(size = 12),
)
